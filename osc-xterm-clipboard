#!/usr/bin/env perl

use MIME::Base64;
use Encode;

sub on_osc_seq {
  my ($term, $op, $args) = @_;
  open(my $fh, '>', '/tmp/testperl');
  print $fh $op;
  return () unless $op eq 52;
  my ($clip, $data) = split ';', $args, 2;
  if ($data eq '?') {
    my $data_free = $term->selection();
    Encode::_utf8_off($data_free); # XXX
    $term->tt_write("\e]52;$clip;".encode_base64($data_free, '')."\a");
  }
  elsif ($clip =~ /x/) {
    my $data_decoded = decode_base64($data);
    Encode::_utf8_on($data_decoded); # XXX
    # my $host_name = $term->resource('title');
    # $data_decoded =~ s/^\/amos\@$host_name://;
    print $fh $data_decoded;
    $term->exec_async('vivaldi', $data_decoded);
  }
  elsif ($clip =~ /y/) {
      my $data_decoded = decode_base64($data);
      Encode::_utf8_on($data_decoded); # XXX
      # my $host_name = $term->resource('title');
      # $data_decoded =~ s/^\/amos\@$host_name://;
      print $fh $data_decoded;
      system($data_decoded);
  }
  else {
    my $data_decoded = decode_base64($data);
    Encode::_utf8_on($data_decoded); # XXX
    print $fh $data_decoded;
    $term->selection($data_decoded, $clip =~ /c/);
    $term->selection_grab(urxvt::CurrentTime, $clip =~ /c/);
  }
  close $fh;
  ()
}
